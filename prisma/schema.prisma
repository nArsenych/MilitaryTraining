generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Course {
  id             String    @id @default(uuid())
  organizationId String
  title          String    @db.Text
  startAge       Int?
  endAge         Int?
  description    String?   @db.Text
  imageUrl       String?   @db.Text
  isPublished    Boolean   @default(false)
  categoryId     String
  cityId         String?
  startDate      DateTime?
  endDate        DateTime?
  createdAt      DateTime  @default(now())
  levelId        String?
  purchches      Purchase[]
  price          Float?    @default(0) @db.Float
  category       Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  city           City?     @relation(fields: [cityId], references: [id])
  level          Level?    @relation(fields: [levelId], references: [id])

  @@index([organizationId])
  @@index([categoryId])
  @@index([cityId])
  @@index([levelId])
}

model Category {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

model City {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

model Level {
  id      String   @id @default(uuid())
  name    String   @unique
  courses Course[]
}

model Purchase {
  id         String @id @default(uuid())
  customerId String 

  courseId String
  course   Course @relation(fields: [courseId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@index([courseId])
  @@unique([customerId, courseId])
}

model StripeCustomer {
  id               String @id @default(uuid())
  customerId       String @unique
  stripeCustomerId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}